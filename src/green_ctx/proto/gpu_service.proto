syntax = "proto3";

package green_ctx.proto;

// Service definition for GPU multiplexer
service GPUService {
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}

  // SM management
  rpc RequestExclusiveSMs(RequestSMsRequest) returns (RequestSMsResponse) {}
  rpc FreeSMs(FreeSMsRequest) returns (FreeSMsResponse) {}

  // Tensor management
  rpc AllocTensor(AllocTensorRequest) returns (TensorInfo) {}
  rpc FreeTensor(FreeTensorRequest) returns (FreeTensorResponse) {}
  rpc GetTensor(GetTensorRequest) returns (TensorInfo) {}
}

// Health check messages
message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1;
  int32 total_sms = 2;
  int32 available_sms = 3;
  int32 num_tensors = 4;
}

// SM management messages
message RequestSMsRequest {
  int32 num_sms = 1;
  string client_id = 2;
}

message RequestSMsResponse {
  repeated int32 allocated_sms = 1;
}

message FreeSMsRequest {
  repeated int32 allocated_sms = 1;
  string client_id = 2;
}

message FreeSMsResponse {
  bool success = 1;
}

// Tensor management messages
message TensorInfo {
  string name = 1;
  repeated int32 shape = 2;
  string dtype = 3;
  bytes serialized_info = 4;
}

message AllocTensorRequest {
  repeated int32 shape = 1;
  string dtype = 2;
  string name = 3;
}

message FreeTensorRequest {
  string name = 1;
}

message FreeTensorResponse {
  bool success = 1;
}

message GetTensorRequest {
  string name = 1;
}